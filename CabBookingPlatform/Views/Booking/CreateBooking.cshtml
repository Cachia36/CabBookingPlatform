@using WebFrontend.Models;
@model BookingViewModel;
@{
    ViewData["Title"] = "Create Booking";
    var UserId = Context.Session.GetString("UserId");
    var savedLocations = ViewBag.SavedLocations as List<string>;
}

<h2>Book a cab</h2>

<form asp-controller="Booking" asp-action="CreateBooking" method="post">

    <div class="form-group" hidden>
        <input value="@UserId" asp-for="UserId" class="form-control" />
    </div>

    <div class="form-group">
        <label>From (Pickup Location)</label>

        @if (savedLocations != null && savedLocations.Any())
        {
            <div class="form-check">
                <input class="form-check-input" type="radio" name="PickupOption" id="pickupSaved" checked onclick="togglePickupInput(true)">
                <label class="form-check-label" for="pickupSaved">Choose from saved locations</label>
            </div>

            <div class="form-check mb-2">
                <input class="form-check-input" type="radio" name="PickupOption" id="pickupManual" onclick="togglePickupInput(false)">
                <label class="form-check-label" for="pickupManual">Enter manually</label>
            </div>

            <select id="pickupDropdown" class="form-control mb-2" onchange="document.getElementById('StartLocation').value = this.value">
                @foreach (var location in savedLocations)
                {
                    <option value="@location">@location</option>
                }
            </select>
        }

        <input asp-for="StartLocation" id="StartLocation" class="form-control @(savedLocations == null || !savedLocations.Any() ? "" : "d-none")" placeholder="Enter pickup location manually" />
        <span asp-validation-for="StartLocation" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>To (Drop-off Location)</label>

        @if (savedLocations != null && savedLocations.Any())
        {
            <div class="form-check">
                <input class="form-check-input" type="radio" name="DropOffOption" id="dropoffSaved" checked onclick="toggleDropOffInput(true)">
                <label class="form-check-label" for="dropoffSaved">Choose from saved locations</label>
            </div>

            <div class="form-check mb-2">
                <input class="form-check-input" type="radio" name="DropOffOption" id="dropoffManual" onclick="toggleDropOffInput(false)">
                <label class="form-check-label" for="dropoffManual">Enter manually</label>
            </div>

            <select id="DropoffDropdown" class="form-control mb-2" onchange="document.getElementById('EndLocation').value = this.value">
                @foreach (var location in savedLocations)
                {
                    <option value="@location">@location</option>
                }
            </select>
        }

        <input asp-for="EndLocation" id="EndLocation" class="form-control @(savedLocations == null || !savedLocations.Any() ? "" : "d-none")" placeholder="Enter drop-off location manually" />
        <span asp-validation-for="EndLocation" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DateTime">Date and Time</label>
        <input asp-for="DateTime" class="form-control" />
        <span asp-validation-for="DateTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PassengerCount">Passengers</label>
        <input asp-for="PassengerCount" class="form-control" />
        <span asp-validation-for="PassengerCount" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CabType">Cab Type</label>
        <select asp-for="CabType" class="form-control">
            <option value="Economic">Economic</option>
            <option value="Premium">Premium</option>
            <option value="Executive">Executive</option>
        </select>
        <span asp-validation-for="CabType" class="text-danger"></span>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <br />
    <button type="submit" class="btn btn-primary">Book</button>
</form>

@section Scripts {
    <script>
        function togglePickupInput(useSaved) {
            const dropdown = document.getElementById("pickupDropdown");
            const textInput = document.getElementById("StartLocation");
            if (useSaved) {
                dropdown.classList.remove("d-none");
                textInput.classList.add("d-none");
                textInput.value = dropdown.value;
            } else {
                dropdown.classList.add("d-none");
                textInput.classList.remove("d-none");
                textInput.value = "";
            }
        }
        // Initialize on page load
        document.addEventListener("DOMContentLoaded", () => {
            togglePickupInput(true);
        });

        function toggleDropOffInput(useSaved) {
            const dropdown = document.getElementById("DropoffDropdown");
            const textInput = document.getElementById("EndLocation");
            if (useSaved) {
                dropdown.classList.remove("d-none");
                textInput.classList.add("d-none");
                textInput.value = dropdown.value;
            } else {
                dropdown.classList.add("d-none");
                textInput.classList.remove("d-none");
                textInput.value = "";
            }
        }
        // Initialize on page load
        document.addEventListener("DOMContentLoaded", () => {
            toggleDropOffInput(true);
        });
    </script>
}
